<div ng-app="ramlEditorApp">
  <raml-editor></raml-editor>
</div>
<script>
  // This part is needed only if you want to provide your own Persistance Implementation
  // Angular Module must match "ramlEditorApp"
  angular.module('ramlEditorApp')
  .factory('MyFileSystem', function ($q, config, $rootScope) {
    var service = {};

    service.directory = function (path) {
      var deferred = $q.defer();
    
      // Your magic goes here:
       // Do deferred.resolve(data); to fulfull the promise or
       // deferred.reject(error); to reject it.
    
       return deferred.promise;
    };

    service.load = function (path, name) {
      var deferred = $q.defer();
    
      // Your magic goes here:
       // Do deferred.resolve(data); to fulfull the promise or
       // deferred.reject(error); to reject it.
    
       return deferred.promise;
    };

    service.remove = function (path, name) {
      var deferred = $q.defer();
    
      // Your magic goes here:
       // Do deferred.resolve(data); to fulfull the promise or
       // deferred.reject(error); to reject it.
    
       return deferred.promise;
    };

    service.save = function (path, name, contents) {
      var deferred = $q.defer();
    
      // Your magic goes here:
       // Do deferred.resolve(data); to fulfull the promise or
       // deferred.reject(error); to reject it.
    
       return deferred.promise;
    };

    return service;
  })
  .run(function (MyFileSystem, config, $rootScope) {
    // Set MyFileSystem as the filesystem to use
    config.set('fsFactory', 'MyFileSystem');
    
    // In case you want to send notifications to the user
    // (for instance, that he must login to save).
    // The expires flags means whether
    // it should be hidden after a period of time or the
    // user should dismiss it manually.
    $rootScope.$broadcast('event:notification',
      {message: 'File saved.', expires: true});

  });
</script>
<style>
  html,
  body, div {
    height: 100%;
  }
</style>
